name: Build and Test

on:
  push:
    branches:
      - '*' # matches every branch
  pull_request:
    branches:
      - '*' # matches every branch


jobs:

  windows-benchmark:
    runs-on: windows-latest
    timeout-minutes: 20
    steps:
    
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          cache: npm
          node-version: 14.17.6
      - name: Checkout LFS objects
        run: git lfs pull

      - name: Upgrade node-gyp
        shell: powershell
        run: |
              npm ci --global node-gyp@9
              npm prefix -g | % {npm config set node_gyp "$_\node_modules\node-gyp\bin\node-gyp.js"}
    
      - run: npm ci
      - run: npm run benchmark

  macos-benchmark:
    runs-on: macos-latest
    timeout-minutes: 20
    steps:
    
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          cache: npm
          node-version: 14.17.6
      - name: Checkout LFS objects
        run: git lfs pull

      - name: Upgrade node-gyp
        run: |
              npm ci --global node-gyp@9
              npm config set node_gyp $(npm prefix -g)/lib/node_modules/node-gyp/bin/node-gyp.js

      - run: npm ci
      - run: npm run benchmark


  linux:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
    
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          cache: npm
          node-version: 14.17.6
      - name: Checkout LFS objects
        run: git lfs pull

      - name: Upgrade node-gyp
        run: |
              npm ci --global node-gyp@9
              npm config set node_gyp $(npm prefix -g)/lib/node_modules/node-gyp/bin/node-gyp.js

      - run: npm ci
      - run: npm run ava

      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run-${{ matrix.test_number }}
          parallel: true

      - name: npm run tsc, build
        run: |
          npm run tsc
          npm run build -- --target node14-linux-x64 --output=dist/snow
          dist/snow --version
          find dist -mindepth 1 ! -name snow -delete
          mkdir -p dist/node_modules/drivelist/build/Release/
          cp node_modules/drivelist/build/Release/drivelist.node dist/node_modules/drivelist/build/Release/drivelist.node
          cp -r resources dist

      - name: 'Tar files'
        run: tar -cvf snow.tar -C dist .

      - name: Publish Artifact
        uses: actions/upload-artifact@v2
        with:
          name: snow-cli-linux-x64.zip
          path: snow.tar


  macos:
    runs-on: macos-latest
    timeout-minutes: 20
    steps:
    
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          cache: npm
          node-version: 14.17.6
      - name: Checkout LFS objects
        run: git lfs pull

      - name: Upgrade node-gyp
        run: |
              npm ci --global node-gyp@9
              npm config set node_gyp $(npm prefix -g)/lib/node_modules/node-gyp/bin/node-gyp.js

      - run: npm ci
      - run: npm run ava

      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run-${{ matrix.test_number }}
          parallel: true

      - name: npm run tsc, build
        run: |
          npm run tsc
          npm run build -- --target node14-macos-x64 --output=dist/snow
          dist/snow --version
          find dist -mindepth 1 ! -name snow -delete
          mkdir -p dist/node_modules/drivelist/build/Release/
          cp node_modules/drivelist/build/Release/drivelist.node dist/node_modules/drivelist/build/Release/drivelist.node
          cp -r resources dist

      - name: 'Tar files'
        run: tar -cvf snow.tar -C dist .

      - name: Publish Artifact
        uses: actions/upload-artifact@v2
        with:
          name: snow-cli-darwin-x64.zip
          path: snow.tar


  windows:
    runs-on: windows-latest
    timeout-minutes: 20
    steps:
    
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          cache: npm
          node-version: 14.17.6
      - name: Checkout LFS objects
        run: git lfs pull

      - name: Upgrade node-gyp
        shell: powershell
        run: |
              npm ci --global node-gyp@9
              npm prefix -g | % {npm config set node_gyp "$_\node_modules\node-gyp\bin\node-gyp.js"}

      - run: npm ci
      - run: npm run ava

      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run-${{ matrix.test_number }}
          parallel: true

      - name: npm run tsc, build
        run: |
          npm run tsc
          npm run build -- --target node14-win-x64 --output=dist/snow.exe
          dist/snow.exe --version
          New-Item -Path dist/node_modules/drivelist/build/Release -ItemType Directory -Force
          cp node_modules/drivelist/build/Release/drivelist.node dist/node_modules/drivelist/build/Release/drivelist.node
          Copy-Item -Path resources -Destination dist -recurse -Force

      - name: Publish Artifact
        uses: actions/upload-artifact@v2
        with:
          name: snow-cli-win-x64.zip
          path: |
            dist/snow.exe
            dist/resources
            dist/node_modules/drivelist/build/Release/drivelist.node

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  finish:
    needs: [macos, windows, linux, analyze]
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true